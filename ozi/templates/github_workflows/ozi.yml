# OZI 0.1
# ozi/templates/github_workflows/ozi.yml
# Part of the OZI Project, under the Apache License v2.0 with LLVM Exceptions.
# See LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
name: OZI

on:
  push:
    branches:
      - main

jobs:
  checkpoint:
    name: OZI ${{ matrix.ozi }} with ${{ matrix.py }} on ${{ matrix.os }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        ozi:
          - dist
        os:
          - ubuntu-latest
          - macos-latest
        py:
          - '3.10'
          - '3.11'
          - '3.12'
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Set up Python ${{ matrix.py }}'
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
        with:
          python-version: '${{ matrix.py }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh>=1.2

      - name: Install test dependencies
        if: matrix.ozi == 'test'
        run: |
          python -m pip install coverage[toml]
          python -m pip install hypothesis[all] 
          python -m pip install pytest 
          python -m pip install pytest-asyncio 
          python -m pip install pytest-cov 
          python -m pip install pytest-randomly 
          python -m pip install pytest-tcpclient 
          python -m pip install pytest-xdist

      - name: Meson setup build
        run: |
          tox -vv --notest

      - name: '${{ matrix.ozi }}'
        run: |
          tox -- --setup=${{ matrix.ozi }}

      - name: set PYTHONPATH
        run: |
          echo "PYTHONPATH=./" >> $GITHUB_ENV

      - name: Pytest with ${{ matrix.py }} ${{ matrix.os }}
        if: matrix.ozi == 'test'
        run: |
          python -m pip install .
          python -m pip install pip-tools
          pip-compile --generate-hashes -o requirements.txt
          python -m pip install -r requirements.txt
          pytest --cov-config=pyproject.toml --cov=ozi -n auto -d tests/*.py --basetemp=temp

  release:
    needs: checkpoint
    runs-on: ubuntu-latest
    concurrency: release
    strategy:
      matrix:
        py:
          - 'py310'
          - 'py311'
          - 'py312'
      fail-fast: true
      max-parallel: 1
    outputs:
      drafted: ${{ steps.draft.outputs.created }}
    permissions:
      contents: write
      id-token: write
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      if: matrix.py == 'py310'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Python Semantic Release
      id: release
      if: matrix.py == 'py310'
      uses: python-semantic-release/python-semantic-release@3abfb7ac216b9ad439de24fda60eca84038e850e
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Pass release draft status to job
      id: draft
      env:
        check: ${{ (steps.release.outputs.released && matrix.py == 'py310') || matrix.py != 'py310' }}
      run: echo "created=${{ env.check }}" >> $GITHUB_OUTPUT

    - uses: actions/download-artifact@v3
      if: steps.draft.outputs.created == 'true' && matrix.py == 'py311' || matrix.py == 'py312'

    - name: Move artifact
      if: steps.draft.outputs.created == 'true' && matrix.py == 'py311' || matrix.py == 'py312'
      run: cp -a artifact/. ./

    - name: Set version
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      id: version
      run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

    - name: Set up Python 3.10
      if: matrix.py == 'py310'
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
      with:
        python-version: '3.12'

    - name: Set up Python 3.11
      if: matrix.py == 'py311'
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
      with:
        python-version: '3.11'

    - name: Set up Python 3.12 
      if: matrix.py == 'py312'
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
      with:
        python-version: '3.12'

    - name: Install ${{ matrix.py }} build dependencies
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      run: |
          python -m pip install --upgrade pip
          python -m pip install --user --upgrade build
          python -m pip install --user --upgrade pyc_wheel
          python -m pip install --user --upgrade sigstore
          python -m pip install --user --upgrade meson
          python -m pip install --user --upgrade setuptools_scm
          python -m pip install --user --upgrade ninja

    - name: Configure git repository
      if: matrix.py == 'py310'
      run: |
          git config --global user.email "noreply@oziproject.dev"
          git config --global user.name "OZI Packaging"
          rm -rf .git/COMMIT_EDITMSG
          mkdir sig

    - name: Build ${{ matrix.py }} wheel
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      id: wheel
      run: |
        python -m build -w
        git stash -- PKG-INFO
        python -m pyc_wheel dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-py3-none-any.whl
        mv dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-py3-none-any.whl dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl

    - name: Sign ${{ matrix.py }} wheel
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      run: |
        sigstore sign dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl

    - name: Move sigstore signing files
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      run: |
        mv dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl.sig sig/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl.sig
        mv dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl.crt sig/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl.crt
        mv dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl.sigstore sig/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}-none-any.whl.sigstore

    - name: Move dist-info file
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      run: mv dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}.dist-info sig/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}-${{ matrix.py }}.dist-info

    - uses: actions/upload-artifact@master
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      with:
        path: |
          ./
          !artifact/

  publish:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.drafted == 'true'
    permissions:
      contents: write
      id-token: write
    steps:
    - uses: actions/download-artifact@v3

    - name: Move artifact
      run: cp -a artifact/. ./

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
      # See https://github.com/actions/runner/issues/1173
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish package distributions to GitHub Releases
      uses: python-semantic-release/upload-to-gh-release@0f96c02a48278aff14251e9f1a0d73122a8c638b
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}