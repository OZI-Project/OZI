# Copyright 2023 Ross J. Duff MSc
# The copyright holder licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at

#   http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
name: OZI

on:
  push:
    branches:
      - main

jobs:
  checkpoint:
    name: OZI ${{ matrix.ozi }} with ${{ matrix.py }} on ${{ matrix.os }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        ozi:
          - dist
          - lint
          - test
        os:
          - ubuntu-latest
          - macos-latest
        py:
          - '3.10'
          - '3.11'
          - '3.12'
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1
        id: setup-python
        with:
          cache: 'pip'
          cache-dependency-path: |
            .tox/**/tmp/**/requirements.txt
          python-version: '${{ matrix.py }}'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh>=1.2

      - name: '${{ matrix.ozi }} (First Try)'
        continue-on-error: true
        id: setup1
        run: |
          tox -e ${{ matrix.ozi }}

      - name: Logging Checkpoint Failures
        if: ${{ steps.setup1.outcome == 'failure' }}
        continue-on-error: true
        run: |
          cat .tox/**/tmp/meson-logs/testlog-${{ matrix.ozi }}.txt

      - name: Logging OZI/Meson Failures
        if: ${{ steps.setup1.outcome == 'failure' }}
        continue-on-error: true
        run: |
          cat .tox/**/tmp/meson-logs/meson-log.txt

      - name: '${{ matrix.ozi }} (Second Try)'
        if: ${{ steps.setup1.outcome == 'failure' }}
        run: |
          tox -r -e ${{ matrix.ozi }}

      - uses: actions/upload-artifact@master
        if: always()
        with:
          name: ${{ matrix.ozi }}-${{ matrix.os }}-${{ matrix.py }}-checkpoint
          path: |
            .tox/**/tmp/meson-logs/testlog-${{ matrix.ozi }}.txt

  release:
    needs: checkpoint
    runs-on: '${{ matrix.os }}'
    concurrency: release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
      fail-fast: true
      max-parallel: 1
    outputs:
      drafted: ${{ steps.draft.outputs.created }}
    permissions:
      contents: write
      id-token: write
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Python Semantic Release
      id: release
      uses: python-semantic-release/python-semantic-release@3abfb7ac216b9ad439de24fda60eca84038e850e
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Pass release draft status to job
      id: draft
      env:
        check: ${{ steps.release.outputs.released }}
      run: echo "created=${{ env.check }}" >> $GITHUB_OUTPUT

    - name: Set version
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      id: version
      run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

    - name: Configure git repository
      run: |
          git config --global user.email "noreply@oziproject.dev"
          git config --global user.name "OZI Packaging"
          rm -rf .git/COMMIT_EDITMSG
          mkdir sig

    - name: Build wheels
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      uses: pypa/cibuildwheel@v1.12.0
      with:
        output-dir: dist
      env:
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.10"
        CIBW_BUILD_FRONTEND: build
        CIBW_BEFORE_BUILD: meson setup build

    - name: Build and sign sdist
      if: ${{ matrix.os == 'ubuntu-latest' }}
      id: sdist
      run: |
        meson setup build
        pip install .
        meson dist -C build --formats gztar --no-tests
        mv build/meson-dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}.tar.gz dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}.tar.gz 
        sigstore sign--output-directory sig dist/${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}.tar.gz

    - name: Sign wheel
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      run: |
        sigstore sign --output-directory sig dist/*.whl

    - name: Publish package distributions to PyPI
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      # NOTE: DO NOT wrap the conditional in ${{ }} as it will always evaluate to true.
      # See https://github.com/actions/runner/issues/1173
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish package distributions to GitHub Releases
      if: steps.release.outputs.released == 'true' || steps.draft.outputs.created == 'true'
      uses: python-semantic-release/upload-to-gh-release@0f96c02a48278aff14251e9f1a0d73122a8c638b
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
